title:: NodeProxy envelopes extension
summary:: Composition with NodeProxy
categories:: Libraries>JITLib>NodeProxy
related:: Classes/NodeProxy, Classes/Ndef, Classes/ProxySpace

Similar to Adverbs (see link::Guides/J-concepts-in-SC::), roles allow to specify how a source for a link::Classes/NodeProxy:: is being used. A role is an association of a link::Classes/Symbol:: and the new proxy source object.

The below examples can equally be used for link::Classes/Ndef:: and in link::Classes/ProxySpace::.

code::
// Thus, the following expressions behave in an equivalent way:

a = NodeProxy(s);
a[0] = ...

ProxySpace.push(s);
~a[0] = ...

Ndef(\a, ...)
::

section::Envelopes control structure

definitionList::

## node.env
|| Set the one named proxy control by Env. This envelope is define by target namedControl variable code::\set::. Optional this envelope can have symbol of name used for later calling.

code::
a = NodeProxy(s);
a[0] = { |freq = 440, dt=0.1, rate=2| Ringz.ar(Impulse.ar(rate * [1, 1.2]), freq, dt)*0.1 };
a.play;
::

## node.cycle -> event pattern
|| Set the proxy controls with an event pattern of type code::\set::. Old values are kept, only those explicitly provided are overridden.



## node.stage -> event pattern
|| Set the proxy controls with an event pattern of type code::\set::. Old values are kept, only those explicitly provided are overridden.



::